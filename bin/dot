#!/bin/sh
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.

set -e

if [ -z "${DOTFILES_HOME}" ]; then
  echo "DOTFILES_HOME undefined. Attempting to determine the path"
  export DOTFILES_HOME="$(cd "$( dirname "$parentDirectory" )" && pwd -P)"
  echo " DOTFILES_HOME has been set to ${$DOTFILES_HOME}"
fi


displayUsageAndExit() {
	echo "dot -- dotfiles management"
	echo ""
	echo "Usage: dot [options]"
	echo ""
	echo "Options:"
	echo "  -e, --edit              Open dotfiles directory for editing"
	echo "  -m, --macSetDefaults    Also set mac defaults if flag is provided"
	echo "  -h, --help              Show this help message and exit"
  exit
}

# Initialize params updated via args
mac_set_defaults=false

if [ $# -eq 0 ]; then
    echo "No arguments provided, continuing script execution..."
    # Add the rest of your script here
else
  while test $# -gt 0; do
    case "$1" in
      "-h"|"--help")
        displayUsageAndExit
        ;;
      "-e"|"--edit")
        exec "$EDITOR" "$DOTFILES_HOME"
        exit
        ;;
      "-m"|"--macSetDefaults")
        mac_set_defaults=true
        ;;
      *)
        echo "Invalid option: $1"
        displayUsageAndExit
        ;;
    esac
    shift
  done
fi

# Update dotfiles themselves
echo "› git pull"
git -C $DOTFILES_HOME pull

if [ "$mac_set_defaults" = true ]; then
  # Set macOS defaults
  $DOTFILES_HOME/macos/set-defaults.sh
fi

# Install homebrew
# $ZSH/homebrew/install.sh 2>&1

# Upgrade homebrew
echo "› brew update"
brew update

echo "› brew upgrade"
brew upgrade

# Install software
echo "› script/install"
$DOTFILES_HOME/script/install